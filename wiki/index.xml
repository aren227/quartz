<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wikis on</title><link>https://aren227.me/wiki/</link><description>Recent content in Wikis on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://aren227.me/wiki/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://aren227.me/Wiki/Software-Development-Methodology/Object-Oriented-Programming/SOLID/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Software-Development-Methodology/Object-Oriented-Programming/SOLID/</guid><description/></item><item><title>A star algorithm</title><link>https://aren227.me/Wiki/Algorithm/A-star-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Algorithm/A-star-algorithm/</guid><description>A star (A*) pathfinding algorithm.
It works almost same with [[Wiki/Algorithm/Dijkstra algorithm]], but with heuristic approach. Distance to all unvisited nodes are calculated with $g(v) + h(v)$ where $g(v)$ is the actual cost from start to $v$, $h(v)$ is the estimated cost from v to end.</description></item><item><title>C Sharp</title><link>https://aren227.me/Wiki/Language/C-Sharp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Language/C-Sharp/</guid><description/></item><item><title>Dijkstra algorithm</title><link>https://aren227.me/Wiki/Algorithm/Dijkstra-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Algorithm/Dijkstra-algorithm/</guid><description/></item><item><title>Floating point</title><link>https://aren227.me/Wiki/Computer-Science/Floating-point/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Computer-Science/Floating-point/</guid><description>Computers represent real numbers as something called floating point numbers. The reason why they are called like this is that radix point can float anywhere between the significant digits.</description></item><item><title>GPU architecture</title><link>https://aren227.me/Wiki/Computer-Science/GPU-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Computer-Science/GPU-architecture/</guid><description/></item><item><title>Haskell</title><link>https://aren227.me/Wiki/Language/Haskell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Language/Haskell/</guid><description>Monad https://stackoverflow.com/questions/11229854/how-can-i-parse-the-io-string-in-haskell https://sanderv1992.github.io/fp/monad/ Use IO Monad only where it&amp;rsquo;s necessary.
Install SDL2 in Windows 10 https://www.reddit.com/r/haskellgamedev/comments/4jpthu/windows_sdl2_is_now_almost_painless_via_stack/
Making Our Own Types and Typeclasses http://learnyouahaskell.</description></item><item><title>Type system</title><link>https://aren227.me/Wiki/Computer-Science/Type-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Computer-Science/Type-system/</guid><description>Strong vs weak typing [!todo]
Static vs dynamic type checking Static type checking is the process of verifying the type safety of a program with its source code, whereas dynamic type checking does at runtime.</description></item></channel></rss>