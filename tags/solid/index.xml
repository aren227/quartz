<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>solid on</title><link>https://aren227.me/tags/solid/</link><description>Recent content in solid on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://aren227.me/tags/solid/index.xml" rel="self" type="application/rss+xml"/><item><title>Single responsibility principle</title><link>https://aren227.me/Wiki/Software-Development-Philosophy/Object-Oriented-Programming/SOLID/Single-responsibility-principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Software-Development-Philosophy/Object-Oriented-Programming/SOLID/Single-responsibility-principle/</guid><description>Single responsibility principle imples &amp;ldquo;A class should have only one reason to change&amp;rdquo;. If a class has more than one responsibility, then the responsibilities become coupled.</description></item><item><title>SOLID</title><link>https://aren227.me/Wiki/Software-Development-Philosophy/Object-Oriented-Programming/SOLID/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aren227.me/Wiki/Software-Development-Philosophy/Object-Oriented-Programming/SOLID/</guid><description>SOLID is acronym for five principles to write more maintainable code in object oriented programming.
[[Single responsibility principle]] [[Open-closed principle]] [[Liskov substitution principle]] [[Interface segregation principle]] [[Dependency inversion principle]]</description></item></channel></rss>